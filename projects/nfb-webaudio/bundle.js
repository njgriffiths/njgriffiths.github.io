!function(t){var o={};function e(n){if(o[n])return o[n].exports;var r=o[n]={i:n,l:!1,exports:{}};return t[n].call(r.exports,r,r.exports,e),r.l=!0,r.exports}e.m=t,e.c=o,e.d=function(t,o,n){e.o(t,o)||Object.defineProperty(t,o,{configurable:!1,enumerable:!0,get:n})},e.r=function(t){Object.defineProperty(t,"__esModule",{value:!0})},e.n=function(t){var o=t&&t.__esModule?function(){return t.default}:function(){return t};return e.d(o,"a",o),o},e.o=function(t,o){return Object.prototype.hasOwnProperty.call(t,o)},e.p="",e(e.s=2)}([function(t,o,e){"use strict";function n(t,o,e){this.context=t,this.urlList=o,this.onload=e,this.bufferList=new Array,this.loadCount=0}n.prototype.loadBuffer=function(t,o){var e=new XMLHttpRequest;e.open("GET",t,!0),e.responseType="arraybuffer";var n=this;e.onload=function(){n.context.decodeAudioData(e.response,function(e){e?(n.bufferList[o]=e,++n.loadCount==n.urlList.length&&n.onload(n.bufferList)):alert("error decoding file data: "+t)},function(t){console.error("decodeAudioData error",t)})},e.onerror=function(){alert("BufferLoader: XHR error")},e.send()},n.prototype.load=function(){for(var t=0;t<this.urlList.length;++t)this.loadBuffer(this.urlList[t],t)},t.exports=n},function(t,o,e){"use strict";var n=e(0),r=void 0,i=["./audio/thunderstorm.mp3","./audio/ambient.mp3","./audio/voice.mp3"];function u(t){document.querySelectorAll(".button").forEach(function(o,e){!function(t,o,e,n){t.addEventListener("click",function(t){var r=e.createBufferSource();r.buffer=o[n],r.connect(e.destination),r.start(0)})}(o,t,r,e)})}window.onload=function(){window.AudioContext=window.AudioContext||window.webkitAudioContext,r=new AudioContext,new n(r,i,u).load()}},function(t,o,e){t.exports=e(1)}]);